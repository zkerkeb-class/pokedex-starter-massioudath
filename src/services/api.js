import axios from "axios";

const API_URL = "http://localhost:3000/api/pokemons";

const api = axios.create({
  baseURL: API_URL,
  headers: {
    "Content-Type": "application/json",
  },
});


// R√©cup√©rer tous les Pok√©mon
export const getAllPokemons = async (page = 1, limit = 10) => {
  const token = localStorage.getItem('token'); // r√©cup√®re ton token stock√© apr√®s login/register
  const response = await api.get(`?page=${page}&limit=${limit}`, {
    headers: {
      Authorization: `Bearer ${token}`, // injecte le token ici
    },
  });
  return response.data;
};


// R√©cup√©rer un Pok√©mon sp√©cifique par ID
export const getPokemonById = async (id) => {
  try {
    const response = await api.get(`/${id}`);
    return response.data.pokemon; // ‚úÖ ici on extrait directement le Pok√©mon
  } catch (error) {
    console.error(`Erreur lors de la r√©cup√©ration du Pok√©mon avec l'ID ${id}`, error);
    throw error;
  }
};
 
// Cr√©er un nouveau Pok√©mon
export const createPokemon = async (data) => {
  try {
    const token = localStorage.getItem('token'); // üî• r√©cup√®re le token
    const response = await api.post("/", data, {
      headers: {
        Authorization: `Bearer ${token}`, // üî• injecte le token ici aussi
      },
    });
    return response.data;
  } catch (error) {
    console.error("Erreur lors de la cr√©ation du Pok√©mon", error);
    throw error;
  }
};


// Mettre √† jour un Pok√©mon existant

// Mettre √† jour un Pok√©mon existant
export const updatePokemon = async (id, data) => {
  try {
    const token = localStorage.getItem('token'); // üî• r√©cup√®re le token
    const response = await api.put(`/${id}`, data, {
      headers: {
        Authorization: `Bearer ${token}`, // üî• injecte le token dans la requ√™te PUT
      },
    });
    return response.data;
  } catch (error) {
    console.error(`Erreur lors de la mise √† jour du Pok√©mon avec l'ID ${id}`, error);
    if (error.response && error.response.data) {
      console.log("Message d'erreur du serveur:", error.response.data);
    }
    throw error;
  }
};


// Supprimer un Pok√©mon
export const deletePokemon = async (id) => {
  try {
    const token = localStorage.getItem('token');
    await api.delete(`/${id}`, {
      headers: {
        Authorization: `Bearer ${token}`,
      },
    });
    return { success: true };
  } catch (error) {
    console.error(`Erreur lors de la suppression du Pok√©mon avec l'ID ${id}`, error);
    throw error;
  }
};



